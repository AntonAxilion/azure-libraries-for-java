///**
// * Copyright (c) Microsoft Corporation. All rights reserved.
// * Licensed under the MIT License. See License.txt in the project root for
// * license information.
// *
// * Code generated by Microsoft (R) AutoRest Code Generator.
// */
//
//package com.microsoft.azure.management.resources.implementation;
//
//import com.azure.core.annotation.*;
//import com.azure.core.http.HttpPipeline;
//import com.azure.core.http.rest.PagedResponse;
//import com.azure.core.http.rest.Response;
//import com.azure.core.implementation.RestProxy;
//import reactor.core.publisher.Mono;
//
///**
// * An instance of this class provides access to all the operations defined
// * in PolicySetDefinitions.
// */
//public class PolicySetDefinitionsInner {
//    /** The Retrofit service to perform REST calls. */
//    private PolicySetDefinitionsService service;
//    /** The service client containing this operation class. */
//    private PolicyClientImpl client;
//
//    /**
//     * Initializes an instance of PolicySetDefinitionsInner.
//     *
//     * @param client the instance of the service client containing this operation class.
//     */
//    public PolicySetDefinitionsInner(HttpPipeline pipeline, PolicyClientImpl client) {
//        this.service = RestProxy.create(PolicySetDefinitionsService.class, pipeline);
//        this.client = client;
//    }
//
//    /**
//     * The interface defining all the services for PolicySetDefinitions to be
//     * used by Retrofit to perform actually REST calls.
//     */
//    interface PolicySetDefinitionsService {
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions createOrUpdate" })
//        @Put("subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}")
//        Mono<Response<PolicySetDefinitionInner>> createOrUpdate(@PathParam("policySetDefinitionName") String policySetDefinitionName, @PathParam("subscriptionId") String subscriptionId, @BodyParam("body") PolicySetDefinitionInner parameters, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions delete" })
//        @Delete("subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}")
//        Mono<Response<Void>> delete(@PathParam("policySetDefinitionName") String policySetDefinitionName, @PathParam("subscriptionId") String subscriptionId, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions get" })
//        @Get("subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}")
//        Mono<Response<PolicySetDefinitionInner>> get(@PathParam("policySetDefinitionName") String policySetDefinitionName, @PathParam("subscriptionId") String subscriptionId, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions getBuiltIn" })
//        @Get("providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}")
//        Mono<Response<PolicySetDefinitionInner>> getBuiltIn(@PathParam("policySetDefinitionName") String policySetDefinitionName, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions list" })
//        @Get("subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions")
//        Mono<PagedResponse<PolicySetDefinitionInner>> list(@PathParam("subscriptionId") String subscriptionId, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions listBuiltIn" })
//        @Get("providers/Microsoft.Authorization/policySetDefinitions")
//        Mono<PagedResponse<PolicySetDefinitionInner>> listBuiltIn(@QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions createOrUpdateAtManagementGroup" })
//        @Put("providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}")
//        Mono<Response<PolicySetDefinitionInner>> createOrUpdateAtManagementGroup(@PathParam("policySetDefinitionName") String policySetDefinitionName, @PathParam("managementGroupId") String managementGroupId, @BodyParam("body") PolicySetDefinitionInner parameters, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions deleteAtManagementGroup" })
//        @Delete("providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}")
//        Mono<Response<Void>> deleteAtManagementGroup(@PathParam("policySetDefinitionName") String policySetDefinitionName, @PathParam("managementGroupId") String managementGroupId, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions getAtManagementGroup" })
//        @Get("providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}")
//        Mono<Response<PolicySetDefinitionInner>> getAtManagementGroup(@PathParam("policySetDefinitionName") String policySetDefinitionName, @PathParam("managementGroupId") String managementGroupId, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions listByManagementGroup" })
//        @Get("providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions")
//        Mono<PagedResponse<PolicySetDefinitionInner>> listByManagementGroup(@PathParam("managementGroupId") String managementGroupId, @QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions listNext" })
//        @Get("{nextUrl}")
//        Mono<PagedResponse<PolicySetDefinitionInner>> listNext(@PathParam("nextUrl") String nextUrl, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions listBuiltInNext" })
//        @Get("{nextUrl}")
//        Mono<PagedResponse<PolicySetDefinitionInner>> listBuiltInNext(@PathParam("nextUrl") String nextUrl, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.resources.PolicySetDefinitions listByManagementGroupNext" })
//        @Get("{nextUrl}")
//        Mono<PagedResponse<PolicySetDefinitionInner>> listByManagementGroupNext(@PathParam("nextUrl") String nextUrl, @HeaderParam("accept-language") String acceptLanguage, @HeaderParam("User-Agent") String userAgent);
//
//    }
//}
